#include<GL/gl.h>
#include<GL/glut.h>
#include<iostream>
using namespace std;
void background();
void display();
float x1,x2,y1,y2;
int sign(int a);
int pt=0;
void dda(float x1,float y1,float x2,float y2);
void mouse(int button,int state,int x,int y);
void key(unsigned char key1,int x,int y);
struct Color
{
float r;
float g;
float b;

}fillcolor,newcolor,oldcolor;
void setPixelColor(int x,int y,Color color);


Color getPixelColor(int x,int y)
{
Color col;
glReadPixels(x,y,1,1,GL_RGB,GL_FLOAT,&col);
return col;
}


void setPixelColor(int x,int y,Color col)
{
glColor3f(col.r,col.g,col.b);
glBegin(GL_POINTS);
glVertex2i(x,y);
glEnd();
glFlush();
}

void floodfill(int x,int y,Color oldcolor,Color newcolor)
{
	Color color;
	color=getPixelColor(x,y);
	if(color.r==oldcolor.r&& color.g==oldcolor.g && color.b==oldcolor.b)
	{
		setPixelColor(x,y,newcolor);
		floodfill(x+1,y,oldcolor,newcolor);
		floodfill(x,y+1,oldcolor,newcolor);
		floodfill(x-1,y,oldcolor,newcolor);
		floodfill(x,y-1,oldcolor,newcolor);
	}
	
}
int main(int argc,char **argv)
{

glutInit(&argc,argv);
glutInitWindowSize(600,600);
glutCreateWindow("Sumedh");

background();
glutDisplayFunc(display);
glutMouseFunc(mouse);
glutKeyboardFunc(key);

glutMainLoop();
}

void background()
{
glClearColor(0,0,0,1);
glClear(GL_COLOR_BUFFER_BIT);
gluOrtho2D(0,600,0,600);
}

void display()
{
glColor3f(1,0,0);
glRecti(10,30,80,120);
glColor3f(0,1,0);
glRecti(140,30,210,120);
glColor3f(0,0,1);
glRecti(280,30,350,120);
glFlush();
}

void dda(float x1,float y1,float x2,float y2)
{
float dx,dy,length,x,y,i;


dx=abs(x2-x1);
dy=abs(y2-y1);

if(dx>=dy)
{
length=dx;
}
else
{
length=dy;
}

dx=(x2-x1)/length;
dy=(y2-y1)/length;

x=x1;
y=y1;

i=1;
while(i<=length)
{
glBegin(GL_POINTS);
glVertex2i(x,y);
glEnd();

x=x+dx;
y=y+dy;
i=i+1;
}
}

int sign(int a)
{
 if(a<0)
 return -1;
 else if(a>0)
 return 1;
 else
 return 0;
}
    
    
   void mouse(int button,int state,int x,int y)
    {	
    	glColor3f(1,1,1);
    	if(button==GLUT_LEFT_BUTTON && state==GLUT_DOWN)
    	{
    		if(pt==0)
    		{
    	x1=x;
    	y1=600-y;
    	x2=x;
    	y2=600-y;
    	pt++;
    	}
    	}
    	else if(pt==1)
    	{
    		dda(x1,y1,x,600-y);
    		x1=x;
    		y1=600-y;
    		
    	}
    	else if(pt==2)
    	{
    		fillcolor=getPixelColor(x,600-y);
			pt=3;
    		
    	}
    	else if(pt==3)
    	{
    	Color newcolor={fillcolor.r,fillcolor.g,fillcolor.b};
    	Color oldcolor= {0,0,0};
    	floodfill(x,600-y,oldcolor,newcolor);
    	pt=4;
    	}
    glFlush();
    }


void key(unsigned char key1,int x,int y)
{
	
	dda(x1,y1,x2,y2);
	pt=2;
	glFlush();
}

